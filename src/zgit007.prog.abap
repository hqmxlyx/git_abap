*&---------------------------------------------------------------------*
*& Report ZGIT007
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZGIT007.

TABLES:TBTCP,TSP01.
SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.
PARAMETERS:P_IDENT LIKE TSP01-RQIDENT NO-DISPLAY.
SELECT-OPTIONS:S_ERDAT FOR SY-DATUM,
               S_UZEIT FOR SY-UZEIT,
               S_JNAME FOR TBTCP-JOBNAME,
               S_IDENT FOR TBTCP-LISTIDENT.
SELECTION-SCREEN END OF BLOCK B1.

DATA: IT_FIELDCAT        TYPE LVC_T_FCAT,
      WA_FIELDCAT        TYPE LVC_S_FCAT,
      IT_FIELDCAT_DIALOG TYPE LVC_T_FCAT,
      WA_LAYOUT          TYPE LVC_S_LAYO.

DATA: OK_CODE          LIKE SY-UCOMM,
      CL_GRID          TYPE REF TO CL_GUI_ALV_GRID,
      G_DOCK_CONTAINER TYPE REF TO  CL_GUI_DOCKING_CONTAINER,
      WA_GRID_LAYOUT   TYPE        LVC_S_LAYO.

DATA:G_INDEX TYPE I.

DATA:BEGIN OF IT_TBTCP OCCURS 0.
       INCLUDE TYPE TBTCP.
       DATA SEL TYPE C.
DATA ICON TYPE ICON_D.
DATA END OF IT_TBTCP.



TYPES:BEGIN OF TY_ITEM,
        SEL  TYPE C,
        ICON TYPE ICON_D,     "状态
      END OF TY_ITEM.

DATA:IT_ITEM TYPE STANDARD TABLE OF TY_ITEM,
     WA_ITEM LIKE LINE OF IT_ITEM.

CONTROLS: TC_ZPMRP025_900 TYPE TABLEVIEW USING SCREEN 9000.

DEFINE   MACRO_FILL_FCAT.
  CLEAR WA_FIELDCAT.
  &1 = &1 + 1.
  WA_FIELDCAT-COL_POS       = &1.
  WA_FIELDCAT-FIELDNAME     = &2.
  WA_FIELDCAT-SCRTEXT_L     = &3.
  WA_FIELDCAT-SCRTEXT_M     = &3.
  WA_FIELDCAT-SCRTEXT_S     = &3.
  WA_FIELDCAT-OUTPUTLEN     = &4.
  WA_FIELDCAT-NO_ZERO       = 'X'.
  WA_FIELDCAT-FIX_COLUMN    = &5. "固定列
  WA_FIELDCAT-KEY           = &5. "固定列
  WA_FIELDCAT-EDIT          = &6.
  WA_FIELDCAT-REF_TABLE     = &7. "内表名称
  WA_FIELDCAT-REF_FIELD     = &8."内表字段名称
  WA_FIELDCAT-COL_OPT       = &9."内表字段名称
  IF WA_FIELDCAT-FIELDNAME = 'ICON'.
    WA_FIELDCAT-HOTSPOT = 'X'.
  ENDIF.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
END-OF-DEFINITION.

INITIALIZATION.


START-OF-SELECTION.
  PERFORM FRM_PROCESS_DATA.

END-OF-SELECTION.
  PERFORM FRM_INIT_FIELDCAT.
  PERFORM FRM_INIT_LAYOUT.
  PERFORM FRM_ALV_OUTPUT.


FORM FRM_PROCESS_DATA .

  SELECT * FROM TBTCP
  WHERE JOBNAME   IN @S_JNAME  "任务名称
    AND LISTIDENT IN @S_IDENT  "任务ID
    AND SDLDATE   IN @S_ERDAT  "任务日期
    AND SDLTIME   IN @S_UZEIT  "任务时间
*    AND AUTHCKNAM = @SY-UNAME
    AND LISTIDENT <> ''  "假脱机请求号不为空
 INTO TABLE @IT_TBTCP.

  IT_TBTCP-ICON = ICON_ICON_LIST.
  MODIFY IT_TBTCP TRANSPORTING ICON WHERE ICON IS INITIAL.
  SORT IT_TBTCP BY AUTHCKNAM SDLDATE DESCENDING.
ENDFORM.



FORM FRM_INIT_FIELDCAT .
  DATA: L_COLPOS TYPE LVC_S_FCAT-COL_POS.
  MACRO_FILL_FCAT L_COLPOS 'ICON' '选择' '4' '' '' '' '' ''.
  MACRO_FILL_FCAT L_COLPOS 'JOBNAME' '作业名称' '4' '' '' '' '' ''.
  MACRO_FILL_FCAT L_COLPOS 'LISTIDENT' '任务ID号' '4' '' '' '' '' ''.
  MACRO_FILL_FCAT L_COLPOS 'SDLDATE' '执行日期' '4' '' '' '' '' ''.
  MACRO_FILL_FCAT L_COLPOS 'SDLTIME' '执行时间' '4' '' '' '' '' ''.
  MACRO_FILL_FCAT L_COLPOS 'AUTHCKNAM' '执行人' '4' '' '' '' '' ''.
ENDFORM.



FORM FRM_INIT_LAYOUT .
  WA_LAYOUT-ZEBRA         = 'X'.     "斑马线显示，颜色隔行交替显示  奇偶行显示不同步显色
  "WA_LAYOUT-F2CODE        = '&ETA'. "双击显示详细信息
  WA_LAYOUT-CWIDTH_OPT    = 'X'.     "自动调整列宽
  WA_LAYOUT-BOX_FNAME     = 'SEL'.   "选择栏位
ENDFORM.


FORM FRM_ALV_OUTPUT .
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      I_CALLBACK_PROGRAM      = SY-REPID
      I_CALLBACK_USER_COMMAND = 'FRM_USER_COMMAND'
*     I_CALLBACK_PF_STATUS_SET = 'FRM_SET_STATUS'
      IS_LAYOUT_LVC           = WA_LAYOUT
      IT_FIELDCAT_LVC         = IT_FIELDCAT
      I_DEFAULT               = 'X'
      I_SAVE                  = 'A'
    TABLES
      T_OUTTAB                = IT_TBTCP
    EXCEPTIONS
      OTHERS                  = 2.
ENDFORM.

FORM  FRM_SET_STATUS USING PT_EXTAB TYPE SLIS_T_EXTAB  .
  DATA :WA_EXTAB LIKE LINE OF PT_EXTAB.
*  "SE90   PROGRAM NAME:SAPLKKBL  GUI STATUS:STANDARD_FULLSCREEN    COPY
*  "SE41  标准程序  SAPLKKBL  标准工具栏 STANDARD_FULLSCREEN
  WA_EXTAB-FCODE = '&RNT'.
  APPEND WA_EXTAB TO PT_EXTAB.
  WA_EXTAB-FCODE = '&ALL'.
  APPEND WA_EXTAB TO PT_EXTAB.
  WA_EXTAB-FCODE = '&SAL'.
  APPEND WA_EXTAB TO PT_EXTAB.
  SET PF-STATUS 'STANDARD_FULLSCREEN' EXCLUDING PT_EXTAB.

  IF CL_GRID IS INITIAL.
    CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
      IMPORTING
        E_GRID = CL_GRID.
  ENDIF.
*  CL_GRID->CHECK_CHANGED_DATA( ).
ENDFORM.

FORM FRM_USER_COMMAND USING R_UCOMM LIKE SY-UCOMM RS_SELFIELD TYPE SLIS_SELFIELD.
  CASE R_UCOMM.
    WHEN '&IC1'.
      G_INDEX = RS_SELFIELD-TABINDEX.
      CALL SCREEN '100'.
    WHEN OTHERS.
  ENDCASE.

ENDFORM.


FORM FRM_EVENT_DBCLICK USING L_TABIX TYPE SY-TABIX L_FIELDNAME.

ENDFORM.

FORM FRM_ALV_REFRESH .
  DATA STBL TYPE LVC_S_STBL.
  STBL-ROW = 'X'." 基于行的稳定刷新
  STBL-COL = 'X'." 基于列稳定刷新
  CALL METHOD CL_GRID->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE = STBL.
ENDFORM.

FORM FRM_EVENT_REFRESH_DATA .
  PERFORM FRM_PROCESS_DATA.
  PERFORM FRM_ALV_REFRESH.
ENDFORM.

FORM FRM_READ_BUFFER.
  DATA:IS_OTF       TYPE C,
       DESIRED_TYPE TYPE SOODK-OBJTP,
       REAL_TYPE    TYPE SOODK-OBJTP,
       RQIDENT      TYPE TSP01-RQIDENT.
  DATA:BEGIN OF IT_LINE OCCURS 0,
         LINE(5000) TYPE C,
       END OF IT_LINE.

  DATA:STRUCTURE TYPE REF TO DATA.
  DATA:IT_FCAT TYPE LVC_T_FCAT,
       WA_FCAT TYPE LVC_S_FCAT.

  DATA:L_INDX(3)     TYPE N,
       L_LEN         TYPE I,
       L_TABLE_ROWS  TYPE I,
       L_TABLE_ROWS2 TYPE I,
       L_START_ROW   TYPE I,
       L_VALUE_ROW   TYPE I,
       L_START_ROWS  TYPE I,
       L_START_ROWS2 TYPE I.

  FIELD-SYMBOLS:<IT_TABLE>    TYPE STANDARD TABLE,
                <WA_TABLE>    TYPE ANY,
                <FIELD_VALUE> TYPE ANY.
  DATA:EP_TABLE TYPE REF TO DATA.

  READ TABLE IT_TBTCP ASSIGNING FIELD-SYMBOL(<WA_TBTCP>) INDEX G_INDEX.
  IF SY-SUBRC = 0.
    RQIDENT = <WA_TBTCP>-LISTIDENT.

    CALL FUNCTION 'RSPO_GET_TYPE_SPOOLJOB'
      EXPORTING
        RQIDENT        = RQIDENT
      IMPORTING
        IS_OTF         = IS_OTF
      EXCEPTIONS
        CAN_NOT_ACCESS = 1.
    IF NOT IS_OTF IS INITIAL.
      MOVE 'OTF' TO DESIRED_TYPE.
    ELSE.
      MOVE 'RAW' TO DESIRED_TYPE.
    ENDIF.

    CALL FUNCTION 'RSPO_RETURN_SPOOLJOB'
      EXPORTING
        RQIDENT              = RQIDENT
        DESIRED_TYPE         = DESIRED_TYPE
      IMPORTING
        REAL_TYPE            = REAL_TYPE
      TABLES
        BUFFER               = IT_LINE
      EXCEPTIONS
        NO_SUCH_JOB          = 1
        TYPE_NO_MATCH        = 2
        JOB_CONTAINS_NO_DATA = 3
        NO_PERMISSION        = 4
        CAN_NOT_ACCESS       = 4
        READ_ERROR           = 5.

    READ TABLE IT_LINE ASSIGNING FIELD-SYMBOL(<WA_LINE_START>) INDEX 2.
    IF SY-SUBRC = 0.
      SPLIT <WA_LINE_START> AT '|' INTO TABLE DATA(IT_FIELD_START).
    ENDIF.

    READ TABLE IT_LINE ASSIGNING FIELD-SYMBOL(<WA_LINE_START2>) INDEX 7.
    IF SY-SUBRC = 0.
      SPLIT <WA_LINE_START2> AT '|' INTO TABLE DATA(IT_FIELD_START2).
    ENDIF.

    DESCRIBE TABLE IT_FIELD_START LINES L_START_ROWS.
    DESCRIBE TABLE IT_FIELD_START2 LINES L_START_ROWS2.
    IF L_START_ROWS2 >  L_START_ROWS.
      L_START_ROW = 7.
      L_VALUE_ROW = L_START_ROW + 2.
    ELSE.
      L_START_ROW = 2.
      L_VALUE_ROW = L_START_ROW + 2.
    ENDIF.


    "表头数据
    READ TABLE IT_LINE ASSIGNING FIELD-SYMBOL(<WA_LINE>) INDEX L_START_ROW.
    IF SY-SUBRC = 0.
      SPLIT <WA_LINE> AT '|' INTO TABLE DATA(IT_FIELD).
      READ TABLE IT_LINE ASSIGNING FIELD-SYMBOL(<WA_LINE2>) INDEX L_VALUE_ROW.
      IF SY-SUBRC = 0.
        SPLIT <WA_LINE2> AT '|' INTO TABLE DATA(IT_FIELD2).
      ENDIF.
      LOOP AT IT_FIELD ASSIGNING FIELD-SYMBOL(<WA_FIELD>).
        IF SY-TABIX > 1."第一行数据是空行
          L_INDX = L_INDX + 1.
          WA_FCAT-FIELDNAME = 'FLD' && L_INDX.
          WA_FCAT-NO_ZERO = ''.
          WA_FCAT-COLTEXT   = <WA_FIELD>.

          READ TABLE IT_FIELD2 ASSIGNING FIELD-SYMBOL(<WA_FIELD2>) INDEX SY-TABIX.
          IF SY-SUBRC = 0.
            WA_FCAT-OUTPUTLEN = CL_ABAP_LIST_UTILITIES=>DYNAMIC_OUTPUT_LENGTH( <WA_FIELD2> ).  "字节数
          ENDIF.

          APPEND WA_FCAT TO IT_FCAT.
          CLEAR:WA_FCAT.
        ENDIF.
      ENDLOOP.

      DESCRIBE TABLE IT_FCAT LINES  L_TABLE_ROWS.

      CALL METHOD CL_ALV_TABLE_CREATE=>CREATE_DYNAMIC_TABLE
        EXPORTING
          IT_FIELDCATALOG = IT_FCAT
        IMPORTING
          EP_TABLE        = EP_TABLE.
    ENDIF.
  ENDIF.

  ASSIGN EP_TABLE->* TO <IT_TABLE>.
  CREATE DATA STRUCTURE LIKE LINE OF <IT_TABLE>.
  " ASSIGN COMPONENT 参考的事接口，要在创建一次数据对象将动态内表的数据复制给结构
  ASSIGN STRUCTURE->* TO <WA_TABLE>.

  LOOP AT  IT_LINE ASSIGNING FIELD-SYMBOL(<WA_LINES>).
    IF SY-TABIX > 2."第一二行表头行无效
      SPLIT <WA_LINES> AT '|' INTO TABLE DATA(IT_FIELDS).
      DESCRIBE TABLE IT_FIELDS LINES L_TABLE_ROWS2.
      IF L_TABLE_ROWS2 <> L_TABLE_ROWS + 1.
        CONTINUE.
      ENDIF.
      LOOP AT IT_FIELDS ASSIGNING FIELD-SYMBOL(<WA_FIELDS>).
        IF SY-TABIX > 1."第一行数据是空行
          ASSIGN COMPONENT ( SY-TABIX - 1 ) OF STRUCTURE <WA_TABLE> TO <FIELD_VALUE>.
          IF <FIELD_VALUE> IS ASSIGNED.
            <FIELD_VALUE> = <WA_FIELDS>.
          ENDIF.
          IF SY-TABIX = 2.
            READ TABLE IT_FCAT TRANSPORTING NO FIELDS WITH KEY COLTEXT = <WA_FIELDS>.
            IF SY-SUBRC = 0.
              CLEAR <WA_TABLE>.
              EXIT.
            ENDIF.
          ENDIF.
        ENDIF.
      ENDLOOP.
      IF  <WA_TABLE> IS NOT INITIAL.
        APPEND <WA_TABLE> TO <IT_TABLE>.
      ENDIF.

    ENDIF.

  ENDLOOP.

  "清空容器缓存，不然会点击其他数据会显示上次数据
  IF G_DOCK_CONTAINER IS NOT INITIAL.
    CALL METHOD G_DOCK_CONTAINER->FREE.
    CLEAR:G_DOCK_CONTAINER.
  ENDIF.

  CREATE OBJECT G_DOCK_CONTAINER
    EXPORTING
      DYNNR     = SY-DYNNR
      REPID     = SY-REPID
      EXTENSION = 1888.  "ALV宽度

  CREATE OBJECT CL_GRID
    EXPORTING
      I_PARENT = G_DOCK_CONTAINER.

  WA_GRID_LAYOUT-ZEBRA      = ABAP_TRUE.
  WA_GRID_LAYOUT-CWIDTH_OPT = ABAP_TRUE.

  IF <IT_TABLE> IS ASSIGNED.
    CALL METHOD CL_GRID->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT       = WA_GRID_LAYOUT
      CHANGING
        IT_FIELDCATALOG = IT_FCAT
        IT_OUTTAB       = <IT_TABLE>.
  ENDIF.
ENDFORM.

FORM FRM_CREATE_DYNTAB .

ENDFORM.

MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS 'STATUS'.
  SET TITLEBAR 'TITLEBAR'.
  PERFORM FRM_READ_BUFFER.
  PERFORM FRM_CREATE_DYNTAB.
ENDMODULE.

MODULE USER_COMMAND_0100 INPUT.
  CASE OK_CODE.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
    WHEN OTHERS.
  ENDCASE.
ENDMODULE.
